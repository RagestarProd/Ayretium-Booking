generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String		@id @default(cuid())
  name          String?
  email         String?		@unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  bookings 		Booking[]
  lastLogin     DateTime @default(now())
  role     		String? 
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?
  token_type        String? 
  scope             String? 
  id_token          String? 
  session_state     String? 

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Booking {
  id          Int      @id @default(autoincrement())
  userId      String
  date        DateTime
  time        String
  description String?
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VenueGroup {
  id      Int      @id @default(autoincrement())
  name    String
  venues  Venue[]
}

model Venue {
  id           Int       @id @default(autoincrement())
  current_id   Int       @unique
  name         String?
  visible      Int       @default(1)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  venueGroupId Int?
  venueGroup   VenueGroup? @relation(fields: [venueGroupId], references: [id])

  rooms        VenueRoom[] 
}

model VenueRoom {
  id       Int    @id @default(autoincrement())
  name     String
  venueId  Int    
  venue    Venue  @relation(fields: [venueId], references: [id])
}